# Two-Phase Inventory for Hardening + Generic Server Setup
# Phase 1: Use this for hardening.yml (root access on port 22)
# Phase 2: Use this for generic-server.yml (admin access on port 22022)

---
all:
  vars:
    # Global Settings
    git_user_full_name: "Test User"
    git_user_email: "test@example.com"
    timezone: "America/New_York"
    
    # Security Configuration
    admin_user: admin
    admin_password: secure123
    admin_groups: "admin,www-data"
    ssh_port: 22022
    ssh_disable_root: true
    ssh_enable_password_auth: false  # Use SSH keys only
    
  children:
    # Phase 1: Hardening (Root Access)
    # Use for: ansible-playbook -i inventory/test-two-phase.yml hardening.yml
    hardening_servers:
      vars:
        ansible_user: root
        ansible_ssh_pass: pass4now  # Initial root password
        ansible_port: 22  # Initial SSH port
        ansible_host_key_checking: false
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
      hosts:
        test-hardening:
          ansible_host: 10.10.10.198
          hostname: test-hardening.example.com
          ansible_ssh_private_key_file: ~/.ssh/id_rsa  # SSH key for admin user
          
    # Phase 2: Generic Server Setup (Admin Access)  
    # Use for: ansible-playbook -i inventory/test-two-phase.yml generic-server.yml
    generic_servers:
      vars:
        ansible_user: admin
        ansible_port: 22022  # New SSH port after hardening
        ansible_host_key_checking: false
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        ansible_become_pass: changeme  # Sudo password for admin user
        # SSH key authentication (no password needed for SSH)
      hosts:
        test-generic:
          ansible_host: 10.10.10.198
          hostname: test-generic.example.com
          ansible_ssh_private_key_file: ~/.ssh/id_rsa  # SSH key for admin user
          swap_size: 512
          setup_swap: false
        test-hardening:
          ansible_host: 10.10.10.198
          hostname: test-hardening.example.com
          ansible_ssh_private_key_file: ~/.ssh/id_rsa  # SSH key for admin user          
    # VPN Servers (inherit from generic_servers after setup)
    vpn_servers:
      vars:
        ansible_user: admin
        ansible_port: 22022
        ansible_host_key_checking: false
        ansible_become_pass: secure123
      hosts:
        test-vpn:
          ansible_host: 10.10.10.198
          hostname: vpn.example.com
          domain: vpn.example.com
          port: 1194
          proto: udp
          ansible_ssh_private_key_file: ~/.ssh/id_rsa
          
    # Web Servers (inherit from generic_servers after setup)
    web_servers:
      vars:
        ansible_user: admin
        ansible_port: 22022
        ansible_host_key_checking: false
        ansible_become_pass: secure123
      hosts:
        test-web:
          ansible_host: 10.10.10.198
          hostname: web.example.com
          domain_name: web.example.com
          webserver: gunicorn
          webserver_port: 8181
          python_version: "3"
          pg_version: "15"
          ansible_ssh_private_key_file: ~/.ssh/id_rsa
          
    # Database Servers (inherit from generic_servers after setup)
    database_servers:
      vars:
        ansible_user: admin
        ansible_port: 22022
        ansible_host_key_checking: false
        ansible_become_pass: secure123
      hosts:
        test-db:
          ansible_host: 10.10.10.198
          hostname: db.example.com
          postgresql_version: "15"
          postgis_version: "3.3"
          database_port: 5432
          pgbouncer: true
          ansible_ssh_private_key_file: ~/.ssh/id_rsa
          
    # Cache Servers (inherit from generic_servers after setup)
    cache_servers:
      vars:
        ansible_user: admin
        ansible_port: 22022
        ansible_host_key_checking: false
        ansible_become_pass: secure123
      hosts:
        test-cache:
          ansible_host: 10.10.10.198
          hostname: cache.example.com
          port: 6379
          interface: "0.0.0.0"
          memory: 512  # MB
          password: "redis_secret_123"
          ansible_ssh_private_key_file: ~/.ssh/id_rsa
          
    # Load Balancers (inherit from generic_servers after setup)
    load_balancers:
      vars:
        ansible_user: admin
        ansible_port: 22022
        ansible_host_key_checking: false
        ansible_become_pass: secure123
      hosts:
        test-lb:
          ansible_host: 10.10.10.198
          hostname: lb.example.com
          domain: app.example.com
          proto: https
          backends:
            - "10.10.10.200:8181"
            - "10.10.10.201:8181"
          ssl_cert_dir: "~/.ssh/certificates/"
          ansible_ssh_private_key_file: ~/.ssh/id_rsa