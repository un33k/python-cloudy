# Granular Task: Delete PostgreSQL Database
# Equivalent to: cloudy-old/db/psql.py::db_psql_delete_database()
# Usage: ansible-playbook tasks/db/postgresql/delete-database.yml -e "database=oldapp"

---
- name: Delete PostgreSQL database
  hosts: "{{ target_hosts | default('all') }}"
  gather_facts: false
  become: true
  
  vars:
    database: "{{ database | mandatory }}"
    
  tasks:
    - name: Check if database exists
      become_user: postgres
      postgresql_query:
        query: "SELECT datname FROM pg_database WHERE datname = %s"
        positional_args:
          - "{{ database }}"
      register: pg_db_check
      
    - name: Terminate active connections to database
      become_user: postgres
      postgresql_query:
        query: |
          SELECT pg_terminate_backend(pid)
          FROM pg_stat_activity
          WHERE datname = %s AND pid <> pg_backend_pid()
        positional_args:
          - "{{ database }}"
      register: pg_terminate_connections
      when: pg_db_check.rowcount > 0
      
    - name: Delete PostgreSQL database
      become_user: postgres
      postgresql_db:
        name: "{{ database }}"
        state: absent
      register: pg_db_deletion
      when: pg_db_check.rowcount > 0
      
    - name: Display PostgreSQL database deletion status
      debug:
        msg: |
          âœ… PostgreSQL database deletion completed
          Database: {{ database }}
          Existed: {{ 'Yes' if pg_db_check.rowcount > 0 else 'No' }}
          Connections terminated: {{ pg_terminate_connections.rowcount if pg_terminate_connections.rowcount is defined else 0 }}
          Status: {{ 'Deleted' if pg_db_deletion.changed else 'Did not exist' }}