# Granular Task: Get Latest Available PostgreSQL Version
# Equivalent to: cloudy-old/db/psql.py::db_psql_latest_version()
# Usage: ansible-playbook tasks/db/postgresql/get-latest-version.yml

---
- name: Get latest available PostgreSQL version
  hosts: "{{ target_hosts | default('all') }}"
  gather_facts: false
  become: true
  
  tasks:
    - name: Ensure PostgreSQL repository is installed
      import_tasks: install-repo.yml
      
    - name: Search for available PostgreSQL client packages
      shell: apt-cache search postgresql-client- | grep "postgresql-client-[0-9]"
      register: pg_packages_search
      changed_when: false
      
    - name: Parse PostgreSQL versions
      set_fact:
        pg_versions: "{{ pg_packages_search.stdout_lines | map('regex_search', 'postgresql-client-(\\d+(?:\\.\\d+)?)\\s', '\\1') | select('string') | list }}"
        
    - name: Sort versions and get latest
      set_fact:
        latest_pg_version: "{{ pg_versions | map('float') | max | string }}"
      when: pg_versions | length > 0
      
    - name: Set latest version fact
      set_fact:
        postgresql_latest_version: "{{ latest_pg_version | default('') }}"
        
    - name: Display latest PostgreSQL version
      debug:
        msg: |
          üîç PostgreSQL version discovery completed
          Available versions: {{ pg_versions | join(', ') if pg_versions else 'None found' }}
          Latest version: {{ postgresql_latest_version if postgresql_latest_version else 'Not determined' }}
          
    - name: Fail if no version found
      fail:
        msg: "No PostgreSQL versions found in repository"
      when: not postgresql_latest_version