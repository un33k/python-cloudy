# Recipe: Server Security Hardening (Phase 1)
# Purpose: Initial security setup that must run as root on port 22
# Usage: ansible-playbook playbooks/recipes/hardening.yml -i inventory/hosts.yml

---
- name: Server Security Hardening (Root Access Phase)
  hosts: hardening_servers
  gather_facts: true
  become: true
  
  vars:
    # Override these in inventory or command line
    setup_admin_user: true
    setup_ssh_security: true
    setup_firewall: true
    
    # Security defaults
    ssh_disable_root: true
    ssh_enable_password_auth: false
    
  pre_tasks:
    - name: Smart connection state detection
      include_tasks: ../../tasks/sys/core/detect-connection-state.yml
      
    - name: Verify hardening if already complete
      include_tasks: ../../tasks/sys/core/verify-hardening-complete.yml
      when: skip_hardening | default(false)
      
    - name: Display hardening information
      debug:
        msg: |
          🔒 Starting Server Security Hardening (Phase 1)
          Target: {{ inventory_hostname }} ({{ ansible_host }})
          Current User: {{ ansible_user }}
          Current Port: {{ ansible_port | default(ssh_default_port | default(22)) }}
          
          🎯 Security Goals:
          ├── Create admin user: {{ admin_user }}
          ├── Install SSH keys for admin user
          ├── Configure UFW firewall
          ├── Change SSH port: {{ ssh_default_port | default(22) }} → {{ ssh_port | default(22022) }}
          ├── Disable root login
          └── Test admin user access
          
          📊 Hardening Status: {{ hardening_state | default('unknown') }}
          🎯 Action: {{ 'Skip hardening (already complete)' if skip_hardening | default(false) else 'Proceed with hardening' }}
      when: not (skip_hardening | default(false))
          
  tasks:
    # Basic system preparation (only if hardening needed)
    - name: Update system packages
      include_tasks: ../../tasks/sys/core/update.yml
      when: not (skip_hardening | default(false))
      tags: [system, update]
      
    - name: Install common utilities
      include_tasks: ../../tasks/sys/core/install-common.yml
      when: not (skip_hardening | default(false))
      tags: [system, packages]
      
    # User Management - Create admin user (only if hardening needed)
    - name: Create admin user
      include_tasks: ../../tasks/sys/user/add-user.yml
      vars:
        username: "{{ admin_user }}"
      when: setup_admin_user | bool and not (skip_hardening | default(false))
      tags: [users, admin]
      
    - name: Set admin user password
      include_tasks: ../../tasks/sys/user/change-password.yml
      vars:
        username: "{{ admin_user }}"
        password: "{{ admin_password }}"
      when: setup_admin_user | bool and not (skip_hardening | default(false))
      tags: [users, admin, password]
      
    - name: Add admin user to sudoers
      include_tasks: ../../tasks/sys/user/add-sudoer.yml
      vars:
        username: "{{ admin_user }}"
        nopasswd_sudo: true
      when: setup_admin_user | bool and not (skip_hardening | default(false))
      tags: [users, admin, sudo]
      
    - name: Add admin user to groups
      include_tasks: ../../tasks/sys/user/add-to-groups.yml
      vars:
        username: "{{ admin_user }}"
        group_list: "{{ admin_groups }}"
      when: setup_admin_user | bool and not (skip_hardening | default(false))
      tags: [users, admin, groups]
      
    # SSH Key Installation (BEFORE port change and root disable) - only if hardening needed
    - name: Install SSH public key for admin user
      include_tasks: ../../tasks/sys/ssh/install-public-key.yml
      vars:
        target_user: "{{ admin_user }}"
        pub_key_path: "{{ ansible_ssh_private_key_file }}.pub"
      when: setup_admin_user | bool and setup_ssh_security | bool and ansible_ssh_private_key_file is defined and not (skip_hardening | default(false))
      tags: [ssh, keys, admin]
      
    # Firewall Setup - Allow new SSH port BEFORE changing port (only if hardening needed)
    - name: Install UFW firewall (before SSH port change)
      include_tasks: ../../tasks/sys/firewall/install.yml
      when: setup_ssh_security | bool and not (skip_hardening | default(false))
      tags: [firewall, ssh, security]
      
    - name: Allow new SSH port in UFW firewall
      ufw:
        rule: allow
        port: "{{ ssh_port | default(22022) }}"
        proto: tcp
      when: setup_ssh_security | bool and (ssh_port | default(22022)) != (ssh_default_port | default(22)) and not (skip_hardening | default(false))
      tags: [firewall, ssh, security]
      
    # SSH Security Configuration (only if hardening needed)
    - name: Configure SSH port
      include_tasks: ../../tasks/sys/ssh/set-port.yml
      when: setup_ssh_security | bool and not (skip_hardening | default(false))
      tags: [ssh, security]
      
    # Test admin user SSH access BEFORE disabling root (only if hardening needed)
    - name: Test admin user SSH access with new port
      include_tasks: ../../tasks/sys/ssh/test-user-access.yml
      vars:
        test_user: "{{ admin_user }}"
        test_port: "{{ ssh_port | default(22022) }}"
        user_password: "{{ admin_password }}"
      when: setup_admin_user | bool and setup_ssh_security | bool and ssh_disable_root | bool and ansible_ssh_private_key_file is defined and not (skip_hardening | default(false))
      tags: [ssh, security, test]
      
    # Final security lockdown (only if hardening needed)
    - name: Disable root login
      include_tasks: ../../tasks/sys/ssh/disable-root-login.yml
      when: setup_ssh_security | bool and ssh_disable_root | bool and not (skip_hardening | default(false))
      tags: [ssh, security]
      
    - name: Disable password authentication
      include_tasks: ../../tasks/sys/ssh/disable-password-auth.yml
      when: setup_ssh_security | bool and not ssh_enable_password_auth | bool and not (skip_hardening | default(false))
      tags: [ssh, security]
      
    # Remove old SSH port from firewall (only if hardening needed)
    - name: Remove old SSH port from UFW firewall
      ufw:
        rule: deny
        port: "{{ ssh_default_port | default(22) }}"
        proto: tcp
        delete: true
      when: setup_ssh_security | bool and (ssh_port | default(22022)) != (ssh_default_port | default(22)) and not (skip_hardening | default(false))
      tags: [firewall, ssh, security]
      ignore_errors: true
      
    # Enable UFW firewall (final security step) - only if hardening needed
    - name: Enable UFW firewall
      ufw:
        state: enabled
        logging: 'on'
      when: setup_firewall | bool and not (skip_hardening | default(false))
      tags: [firewall, security]
      
  post_tasks:
    - name: Display hardening completion summary
      debug:
        msg: |
          🔒 Server Security Hardening Complete!
          
          ✅ Security Status:
          ├── Admin user created: {{ admin_user }}
          ├── SSH keys installed: {{ 'Yes' if ansible_ssh_private_key_file is defined else 'No' }}
          ├── SSH port changed: 22 → {{ ssh_port }}
          ├── Root login disabled: {{ 'Yes' if ssh_disable_root else 'No' }}
          ├── UFW firewall active: Yes
          └── Password auth disabled: {{ 'Yes' if not ssh_enable_password_auth else 'No' }}
          
          🚀 Next Steps:
          1. Update your inventory to use:
             - ansible_user: {{ admin_user }}
             - ansible_port: {{ ssh_port }}
          2. Run: ansible-playbook generic-server.yml
          
          ⚠️  IMPORTANT: Root access is now disabled!
          ⚠️  Connect using: ssh {{ admin_user }}@{{ ansible_host }} -p {{ ssh_port }}