# Smart Server Setup - Auto-detects and runs hardening if needed
# Usage: ansible-playbook -i inventory/test-two-phase.yml playbooks/recipes/smart-server.yml --limit generic_servers

---
- name: Smart Server Detection and Setup
  hosts: generic_servers
  gather_facts: false
  become: false
  
  tasks:
    # Use our robust 4-step connection detection
    - include_tasks: ../../tasks/sys/core/detect-connection-state.yml
    
    - name: Display smart server decision
      debug:
        msg: |
          üéØ Smart Server Setup Decision:
          Hardening State: {{ hardening_state }}
          Action: {{ 'Skip hardening (already complete)' if skip_hardening else 'Run hardening first' }}
          
    - name: Set connection parameters for hardening (if needed)
      set_fact:
        ansible_user: root
        ansible_port: "{{ ssh_default_port | default(22) }}"
      when: not skip_hardening
      
    - name: Set connection parameters for hardened server
      set_fact:
        ansible_user: "{{ admin_user | default('admin') }}"
        ansible_port: "{{ ssh_port | default(22022) }}"
      when: skip_hardening

- name: Run Hardening (Fresh Server)
  hosts: generic_servers
  gather_facts: false
  become: true
  vars:
    ansible_user: root
    ansible_port: "{{ ssh_default_port | default(22) }}"
    
  tasks:
    - name: Skip hardening message
      debug:
        msg: "‚è≠Ô∏è Skipping hardening - server already hardened"
      when: hostvars[inventory_hostname]['skip_hardening'] | default(false)
      
    - name: Run hardening tasks
      block:
        - include_tasks: ../../tasks/sys/core/update.yml
        - include_tasks: ../../tasks/sys/user/add-user.yml
          vars:
            username: "{{ admin_user }}"
            password: "{{ admin_password }}"
            groups: "{{ admin_groups }}"
        - include_tasks: ../../tasks/sys/user/add-sudoer.yml
          vars:
            username: "{{ admin_user }}"
            nopasswd_sudo: true
        - include_tasks: ../../tasks/sys/ssh/install-public-key.yml
          vars:
            target_user: "{{ admin_user }}"
            pub_key_path: "{{ (ansible_ssh_private_key_file | default('~/.ssh/id_rsa')) + '.pub' }}"
        - include_tasks: ../../tasks/sys/ssh/set-port.yml
          vars:
            ssh_port: 22022
        - include_tasks: ../../tasks/sys/ssh/disable-root-login.yml
        - include_tasks: ../../tasks/sys/ssh/disable-password-auth.yml
        - include_tasks: ../../tasks/sys/firewall/install.yml
        - include_tasks: ../../tasks/sys/firewall/secure-server.yml
          vars:
            ssh_port: 22022
        - include_tasks: ../../tasks/sys/core/verify-hardening-complete.yml
      when: not (hostvars[inventory_hostname]['skip_hardening'] | default(false))

- name: Run Generic Server Setup
  hosts: generic_servers
  gather_facts: true
  become: true
  vars:
    ansible_user: "{{ admin_user | default('admin') }}"
    ansible_port: "{{ ssh_port | default(22022) }}"
    
  tasks:
    - include_tasks: ../../tasks/sys/core/update.yml
    - include_tasks: ../../tasks/sys/core/install-common.yml
    - include_tasks: ../../tasks/sys/core/hostname.yml